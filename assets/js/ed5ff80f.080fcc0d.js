"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[325],{7065:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Observers/tags","title":"Tags","description":"The CollectionService allows developers to assign arbitrary tags to any instance in a game. The observeTag observer can be used to observe instances with specific tags. This can be used to designate specific behavior to an object when it has a given tag, and to clean up the behavior once the tag is removed.","source":"@site/docs/Observers/tags.md","sourceDirName":"Observers","slug":"/Observers/tags","permalink":"/RbxObservers/docs/Observers/tags","draft":false,"unlisted":false,"editUrl":"https://github.com/Sleitnick/RbxObservers/edit/main/docs/Observers/tags.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Properties","permalink":"/RbxObservers/docs/Observers/properties"}}');var a=s(4848),r=s(8453);const o={},i="Tags",c={},d=[{value:"Type-Checking",id:"type-checking",level:2},{value:"Ancestry Inclusion List",id:"ancestry-inclusion-list",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"tags",children:"Tags"})}),"\n",(0,a.jsxs)(t.p,{children:["The CollectionService allows developers to assign arbitrary tags to any instance in a game. The ",(0,a.jsx)(t.code,{children:"observeTag"})," observer can be used to observe instances with specific tags. This can be used to designate specific behavior to an object when it has a given tag, and to clean up the behavior once the tag is removed."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'-- Observe instances with the "Disco" tag:\nObservers.observeTag("Disco", function(part: BasePart)\n\t-- Spawn a thread that changes the color randomly every 0.2 seconds:\n\tlocal discoThread = task.spawn(function()\n\t\twhile true do\n\t\t\ttask.wait(0.2)\n\t\t\tpart.Color = Color3.new(math.random(), math.random(), math.random())\n\t\tend\n\tend)\n\n\t-- Close the disco thread once the tag or instance goes away:\n\treturn function()\n\t\ttask.cancel(discoThread)\n\tend\nend)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"type-checking",children:"Type-Checking"}),"\n",(0,a.jsxs)(t.p,{children:["Note that the instance class is unknown to the observer. The above example assumes it is a ",(0,a.jsx)(t.code,{children:"Part"}),", but that is not guaranteed. It is best to check that the type you're expecting is correct:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'Observers.observeTag("Disco", function(part: BasePart)\n\tassert(part:IsA("BasePart"), "expected part")\n\t...\nend)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"ancestry-inclusion-list",children:"Ancestry Inclusion List"}),"\n",(0,a.jsx)(t.p,{children:"By default, the tag observer will observe tagged instances in all ancestors within the game."}),"\n",(0,a.jsxs)(t.p,{children:["A common desire when observing tagged instances is to only observe instances within a specific ancestor. For instance, a developer might only want to observe instances within the workspace. This can be done by supplying a list of allowed ancestors in the ",(0,a.jsx)(t.code,{children:"ancestors"})," array parameter:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-lua",children:'local allowedAncestors = { workspace }\n\nObservers.observeTag(\n\t"Disco",\n\tfunction(part: BasePart)\n\t\t...\n\tend,\n\tallowedAncestors\n)\n'})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var n=s(6540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);